@page "/menu"
@inject SWEPP.Services.OrderService OrderService
@inject NavigationManager NavigationManager
@using SWEPP.Models

<h3>Our Menu</h3>

@if (!string.IsNullOrEmpty(feedbackMessage))
{
    <div class="alert">@feedbackMessage</div>
}

@foreach (var item in menuItems)
{
    <div class="menu-item">
        <div style="display: flex; align-items: center;">
            <img src="images/@item.ImagePath" alt="@item.Name" style="width: 100px; height: 100px; margin-right: 10px;" />
            <div>
                <h4>@item.Name - @item.Price.ToString("C")</h4>
                @if (item is StaticPizza staticPizza)
                {
                    <p>Size: @staticPizza.Size</p>
                    <p>Crust: @staticPizza.Crust</p>
                    <p>Toppings: @string.Join(", ", staticPizza.Toppings)</p>
                }
                <button class="btn btn-primary" @onclick="() => AddToOrder(item)">Add to Cart</button>
            </div>
        </div>
        <hr />
    </div>
}

<div class="menu-item">
    <h4>Custom Pizza</h4>
    <p>Create a pizza with your choice of crust, sauce, cheese, and toppings!</p>
    <button class="btn btn-success" @onclick="NavigateToCustomPizza">Customize Your Pizza</button>
</div>

@code {
    private List<MenuItem> menuItems = new List<MenuItem>
    {
        new StaticPizza("Pepperoni Pizza", "Large", "Thin", 12.99M, new List<string> { "Pepperoni", "Cheese" }, "peppizza.jpg"),
        new StaticPizza("Veggie Pizza", "Medium", "Thick", 10.99M, new List<string> { "Bell Peppers", "Onions", "Mushrooms" }, "vegpizza.jpg"),
        new StaticPizza("BBQ Chicken Pizza", "Large", "Hand-Tossed", 14.99M, new List<string> { "BBQ Chicken", "Red Onions", "Cilantro" }, "bbqpizza.jpg"),
        new StaticPizza("Margherita Pizza", "Medium", "Thin", 11.99M, new List<string> { "Fresh Mozzarella", "Basil", "Tomato Sauce" }, "margpizza.jpg"),
        new StaticPizza("Meat Lover’s Pizza", "Extra Large", "Stuffed", 15.99M, new List<string> { "Sausage", "Pepperoni", "Bacon", "Ham" }, "meatpizza.jpg"),

        new MenuItem { Name = "Garlic Bread", Price = 4.99M, ImagePath = "gbmenu.jpg" },
        new MenuItem { Name = "Cheesy Breadsticks", Price = 5.99M, ImagePath = "cheesybreadsticks.jpg" },
        new MenuItem { Name = "Caesar Salad", Price = 6.99M, ImagePath = "salad.jpg" },

        new MenuItem { Name = "Coke (Can)", Price = 1.49M, ImagePath = "coke can.jpg" },
        new MenuItem { Name = "Coke (Bottle)", Price = 2.49M, ImagePath = "coke2l.jpg" },
        new MenuItem { Name = "Coke (2L)", Price = 2.99M, ImagePath = "coke2l.jpg" },
        new MenuItem { Name = "Sprite (Can)", Price = 1.49M, ImagePath = "sprite can.png" },
        new MenuItem { Name = "Sprite (Bottle)", Price = 2.49M, ImagePath = "sprite bottle.png" },
        new MenuItem { Name = "Sprite (2L)", Price = 2.99M, ImagePath = "sprite2l.jpg" },
        new MenuItem { Name = "Diet Coke (Can)", Price = 1.49M, ImagePath = "diet coke can.png" },
        new MenuItem { Name = "Diet Coke (Bottle)", Price = 2.49M, ImagePath = "diet coke bottle.png" },
        new MenuItem { Name = "Diet Coke (2L)", Price = 2.99M, ImagePath = "diet coke2l.png" },
        new MenuItem { Name = "Fanta (Can)", Price = 1.49M, ImagePath = "fanta can.jpg" },
        new MenuItem { Name = "Fanta (Bottle)", Price = 2.49M, ImagePath = "fanta bottle.jpg" },
        new MenuItem { Name = "Fanta (2L)", Price = 2.99M, ImagePath = "fanta 2l.png" },
        new MenuItem { Name = "Dr. Pepper (Can)", Price = 1.49M, ImagePath = "dp can.jpg" },
        new MenuItem { Name = "Dr. Pepper (Bottle)", Price = 2.49M, ImagePath = "dp bottle.png" },
        new MenuItem { Name = "Dr. Pepper (2L)", Price = 2.99M, ImagePath = "dr-pepper-2-liter-coupon.jpg" },
    };

    private string? feedbackMessage;

    private void AddToOrder(MenuItem item)
    {
        OrderService.AddToOrder(item);
        feedbackMessage = $"{item.Name} has been added to your cart!";
        StateHasChanged();

        Task.Delay(3000).ContinueWith(_ =>
        {
            feedbackMessage = null;
            InvokeAsync(StateHasChanged);
        });
    }

    private void NavigateToCustomPizza()
    {
        NavigationManager.NavigateTo("/custom-pizza");
    }
}
