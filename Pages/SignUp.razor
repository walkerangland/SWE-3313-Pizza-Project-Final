@page "/sign-up"
@inject SWEPP.Services.CustomerService CustomerService
@using SWEPP.Models

<h3>Sign Up</h3>

<EditForm Model="newCustomer" OnValidSubmit="HandleSignUp">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Name:</label>
        <InputText @bind-Value="newCustomer.Name" />
    </div>
    <div>
        <label>Phone Number:</label>
        <InputText @bind-Value="newCustomer.PhoneNumber" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="newCustomer.Password" type="password" />
    </div>
    <div>
        <label>Address:</label>
        <InputText @bind-Value="newCustomer.Address" />
    </div>
    <div>
        <label>Subdivision:</label>
        <InputText @bind-Value="newCustomer.Subdivision" />
    </div>
    <div>
        <label>Major Intersection:</label>
        <InputText @bind-Value="newCustomer.MajorIntersection" />
    </div>
    <div>
        <label>Payment Type:</label>
        <InputText @bind-Value="newCustomer.PaymentType" />
    </div>

    <button type="submit">Sign Up</button>
</EditForm>

@if (signUpSuccess)
{
    <p style="color: green;">Sign-up successful! You can now log in.</p>
}

@code {
    private Customer newCustomer = new Customer();
    private bool signUpSuccess = false;

    private void HandleSignUp()
    {
        CustomerService.AddCustomer(newCustomer);
        signUpSuccess = true;

        newCustomer = new Customer();
    }
}