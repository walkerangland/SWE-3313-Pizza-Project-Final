@page "/receipt"
@inject SWEPP.Services.OrderService OrderService

<h3>Receipt</h3>

@if (Receipt != null)
{
    <div>
        <h4>Customer: @Receipt.CustomerName</h4>
        <p>Date: @Receipt.Date</p>
        <h5>Items:</h5>
        <ul>
            @foreach (var item in Receipt.Items)
            {
                <li>@item.Name - @item.Price.ToString("C")</li>
            }
        </ul>
        <p><strong>Total:</strong> @Receipt.TotalPrice.ToString("C")</p>
        <p><strong>Payment Method:</strong> @Receipt.PaymentMethod</p>
        <p><strong>Order Type:</strong> @Receipt.OrderType</p>
        @if (Receipt.OrderType == "Delivery")
        {
            <p><strong>Delivery Address:</strong> @Receipt.DeliveryAddress</p>
        }

        @if (!SignatureSubmitted)
        {
            <h5>Customer Signature</h5>
            <div>
                <label for="signature">Sign Below:</label>
                <input id="signature" @bind="CustomerSignature" placeholder="Customer Signature" style="width: 100%; padding: 5px;" />
            </div>
            <button @onclick="SubmitSignature">Submit</button>
        }
        else
        {
            <h5>Thank you for your signature!</h5>
        }
    </div>
}
else
{
    <p>No receipt available.</p>
}

@code {
    private Receipt? Receipt { get; set; }
    private string CustomerSignature = string.Empty;
    private bool SignatureSubmitted = false;

    protected override void OnInitialized()
    {
        Receipt = OrderService.GetCurrentReceipt();
    }

    private void SubmitSignature()
    {
        if (!string.IsNullOrWhiteSpace(CustomerSignature))
        {
            SignatureSubmitted = true;
            StateHasChanged();
        }
    }
}